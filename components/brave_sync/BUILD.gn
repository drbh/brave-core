import("//build/config/features.gni")

source_set("brave_sync") {
  sources = [
    "bookmarks.cc",
    "bookmarks.h",
    "client/client.h",
    "client/client_ext_impl.cc",
    "client/client_ext_impl.h",
    "client/client_web_ui_impl.cc",
    "client/client_web_ui_impl.h",
    "controller.h",
    "controller_impl.cc",
    "controller_impl.h",
    "cansendbookmarks.h",
    "debug.cc",
    "debug.h",
    "devices.cc",
    "devices.h",
    "jslib_const.cc",
    "jslib_const.h",
    "jslib_messages.cc",
    "jslib_messages.h",
    "object_map.cc",
    "object_map.h",
    "pref_names.cc",
    "pref_names.h",
    "profile_prefs.cc",
    "profile_prefs.h",
    "settings.cc",
    "settings.h",
    "tools.cc",
    "tools.h",
    "values_conv.cc",
    "values_conv.h",
    "value_debug.cc",
    "value_debug.h",
  ]

  deps = [
    "//brave/browser/extensions",
  ]

  public_deps = [
    "//content/public/browser",
  ]
}

# Somehow 'brave_resources.pak' gets updated just on 2nd build
# brave-extension/app/manifest.prod.json needs two builds to get
# 'brave_resources.pak' updated
# this may be the side effect of using $target_gen_dir when files indeed
# are copied into //brave/browser/resources/
action("copy-sync-extension-resources") {
  script = "//brave/script/copy-sync-extension.py"
  args = []
  inputs = [
    "//brave/components/brave_sync/extension/background.js",
    #"//brave/vendor/brave-sync/bundles/bundle.js",
    "$root_gen_dir/brave-sync/bundles/bundle.js",
    #"//brave/vendor/brave-crypto/browser/crypto.js",
    "$root_gen_dir/brave-crypto/browser/crypto.js",
  ]
  # Cannot use any `src` directory except `out` as a parent for any output
  outputs = [
    "$target_gen_dir/brave_sync_extension/background.js",
    "$target_gen_dir/brave_sync_extension/bundle.js",
    "$target_gen_dir/brave_sync_extension/crypto.js",
  ]
  public_deps = [
    "//brave/components/brave_sync/brave_sync_lib:brave_sync_js_lib_bundle",
    "//brave/components/brave_sync/brave_sync_lib:brave_crypto_js_lib_bundle",
  ]
}
