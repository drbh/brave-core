diff --git a/chrome/browser/ui/views/profiles/profile_chooser_view.cc b/chrome/browser/ui/views/profiles/profile_chooser_view.cc
index 1d05bb51069a5c592bfcf375147d9ca7140f2eb9..00257f226d7632149bf7c12fd53a9fa6ba4d2774 100644
--- a/chrome/browser/ui/views/profiles/profile_chooser_view.cc
+++ b/chrome/browser/ui/views/profiles/profile_chooser_view.cc
@@ -412,6 +412,7 @@ void ProfileChooserView::ResetView() {
   current_profile_card_ = nullptr;
   first_profile_button_ = nullptr;
   guest_profile_button_ = nullptr;
+  tor_profile_button_ = nullptr;
   users_button_ = nullptr;
   go_incognito_button_ = nullptr;
   lock_button_ = nullptr;
@@ -644,10 +645,15 @@ void ProfileChooserView::ButtonPressed(views::Button* sender,
     DCHECK(service->GetBoolean(prefs::kBrowserGuestModeEnabled));
     profiles::SwitchToGuestProfile(ProfileManager::CreateCallback());
     base::RecordAction(base::UserMetricsAction("ProfileChooser_GuestClicked"));
+  } else if (sender == tor_profile_button_) {
+    profiles::SwitchToTorProfile(ProfileManager::CreateCallback());
+    base::RecordAction(base::UserMetricsAction("ProfileChooser_TorClicked"));
   } else if (sender == users_button_) {
     // If this is a guest session, close all the guest browser windows.
-    if (browser_->profile()->IsGuestSession()) {
+    if (browser_->profile()->IsGuestSession() && !browser_->profile()->IsTorProfile()) {
       profiles::CloseGuestProfileWindows();
+    } else if (browser_->profile()->IsTorProfile()) {
+      profiles::CloseTorProfileWindows();
     } else {
       UserManager::Show(base::FilePath(),
                         profiles::USER_MANAGER_SELECT_PROFILE_NO_ACTION);
@@ -1314,9 +1320,12 @@ views::View* ProfileChooserView::CreateOptionsView(bool display_lock,
       layout->AddView(guest_profile_button_);
     }
   }
+  AddTorButton(layout);
 
   base::string16 text = l10n_util::GetStringUTF16(
       is_guest ? IDS_PROFILES_EXIT_GUEST : IDS_PROFILES_MANAGE_USERS_BUTTON);
+  if (browser_->profile()->IsTorProfile())
+    text = l10n_util::GetStringUTF16(IDS_PROFILES_EXIT_TOR);
   const gfx::VectorIcon& settings_icon =
       is_guest ? kCloseAllIcon : kSettingsIcon;
   users_button_ = new HoverButton(
